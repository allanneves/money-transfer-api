/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.tables.Transfer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransferRecord extends UpdatableRecordImpl<TransferRecord> implements Record7<Long, Long, Long, BigDecimal, String, Timestamp, Long> {

    private static final long serialVersionUID = 1695125446;

    /**
     * Setter for <code>PUBLIC.transfer.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.transfer.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.transfer.origin_account</code>.
     */
    public void setOriginAccount(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.transfer.origin_account</code>.
     */
    public Long getOriginAccount() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>PUBLIC.transfer.destination_account</code>.
     */
    public void setDestinationAccount(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.transfer.destination_account</code>.
     */
    public Long getDestinationAccount() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>PUBLIC.transfer.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.transfer.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>PUBLIC.transfer.currency</code>.
     */
    public void setCurrency(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.transfer.currency</code>.
     */
    public String getCurrency() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.transfer.date_time</code>.
     */
    public void setDateTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.transfer.date_time</code>.
     */
    public Timestamp getDateTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>PUBLIC.transfer.transfer_id</code>.
     */
    public void setTransferId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.transfer.transfer_id</code>.
     */
    public Long getTransferId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Long, Long, BigDecimal, String, Timestamp, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Long, Long, BigDecimal, String, Timestamp, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Transfer.TRANSFER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Transfer.TRANSFER.ORIGIN_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Transfer.TRANSFER.DESTINATION_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Transfer.TRANSFER.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Transfer.TRANSFER.CURRENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Transfer.TRANSFER.DATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return Transfer.TRANSFER.TRANSFER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getOriginAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getDestinationAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getDateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getTransferId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getOriginAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getDestinationAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getDateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getTransferId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value2(Long value) {
        setOriginAccount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value3(Long value) {
        setDestinationAccount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value5(String value) {
        setCurrency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value6(Timestamp value) {
        setDateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value7(Long value) {
        setTransferId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord values(Long value1, Long value2, Long value3, BigDecimal value4, String value5, Timestamp value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransferRecord
     */
    public TransferRecord() {
        super(Transfer.TRANSFER);
    }

    /**
     * Create a detached, initialised TransferRecord
     */
    public TransferRecord(Long id, Long originAccount, Long destinationAccount, BigDecimal amount, String currency, Timestamp dateTime, Long transferId) {
        super(Transfer.TRANSFER);

        set(0, id);
        set(1, originAccount);
        set(2, destinationAccount);
        set(3, amount);
        set(4, currency);
        set(5, dateTime);
        set(6, transferId);
    }
}
